
//
// Datagrid
//
// 대화형 테이블 형식 데이터 스타일


// Grid Mixins
//
// ----------------------------------------

@mixin datagrid-flex-column() {
  display: flex;
  flex-direction: column;
  flex-wrap: nowrap;
  position: relative;
}

@mixin datagrid-flex-row(){
  display: flex;
  flex-direction: row;
  flex-wrap: nowrap;
  flex: 1 1 auto;
  position: relative;
  border-collapse: collapse;
}

@mixin datagrid-flex-cell() {
  flex: 1 1 auto;
  align-items: stretch; // 행(row) 안의 셀 높이를 동일하게 맞춤
  border: solid $datagrid-border-color;
  border-width: 0 0 $datagrid-border-width 0;
  padding: $datagrid-padding-y $datagrid-padding-x;
  background-color: $datagrid-bg;
  min-width: 8rem;
}

@mixin data-grid-sticky() {
  position: sticky;
  top: 0;
  left: 0;
}


// Datagrid Styles
//
// ----------------------------------------

// Grid & Rowgroup
// 표 형식 정보 표시를 위한 그리드
// 행(row)을 포함하는 그룹으로 <thead>, <tbody> 및 <tfoot>의 기능을 모방
.datagrid,
.datagrid-rowgroup,
.datagrid-hader,
.datagrid-body {
  @include datagrid-flex-column();
}

.datagrid-rowgroup,
.datagrid-hader,
.datagrid-body {
  flex: 1 1 auto;
}

// Row
// 표 형식 구조 내의 셀들의 행
//
.datagrid-row {
  @include datagrid-flex-row();
}


// Gridcell
// <td>요소의 기능을 모방하는 셀
//
.datagrid-cell,
.datagrid-cell-select {
  @include datagrid-flex-cell();
  color: $datagrid-color;

  // gridcell이 <th> 기능을 모방할 때
  &[role="columnheader"],
  &[role="rowheader"] {
    font-weight: bolder;
  }
}

// Selection Gridcell
.datagrid-cell-select {
  min-width: 3rem;
  flex: 0 0 3rem;
}

// Header 안의 Gridcell
.datagrid-header .datagrid-cell {
  border-top: $datagrid-border-width solid $datagrid-border-color;
  border-bottom: ($datagrid-border-width * 2) solid $datagrid-border-color;
  background-color: $datagrid-alt-bg;
}

// Tabindex가 있을 때 포커스 된 상태 추가 (*테스트)
[role="columnheader"],
[role="rowheader"],
[role="gridcell"] {
  &[tabindex] {
    position: relative;
    &:focus {
      outline: 2px dotted $primary;
      z-index: 10;
    }
  }
}



// Sticky
//

// rowgroup을 움직이지 않게 할 경우
// rowgroup과 함께 사용.
.datagrid-rowgroup-sticky {
  @include data-grid-sticky();
  z-index: $datagrid-rowgroup-sticky-z-index;
}

// row의 gridcell을 움직이지 않게 할 경우
// row 안에 사용하며, 1개 이상의 gridcell을 포함하고 있어야 함
.datagrid-row-sticky {
  @include datagrid-flex-row();
  @include data-grid-sticky();
  z-index: $datagrid-row-sticky-z-index;

  // sticky effect style
  &:after {
    content: "";
    position: absolute;
    right: -4px;
    width: 4px;
    height: 100%;
    background: linear-gradient(90deg, rgba($black, 0.1) 0%, rgba($white, 0) 100%);
  }
}


// rowspan
// 2개 이상의 행을 갖는 grid cell 스타일
// datagrid-row를 포함하므로 특정한 스펙은 갖고 있지 않음.

.datagrid-rowspan {
  flex: 1 1 auto;
  display: flex;
  flex-direction: column;
  flex-wrap: nowrap;
}



// Variables Styles
//
// ----------------------------------------

// Responsive -- 그리드 시스템과 연결
//
.datagrid-responsive {
  overflow: auto;
}

// Bordered
//
.datagrid-bordered .datagrid-rowgroup .datagrid-row {
  .datagrid-cell {
    border-left-width: $datagrid-border-width;
    &:last-child {
      border-right-width: $datagrid-border-width;
    }
  }
}

// Stripe
//
.datagrid-striped .datagrid-body .datagrid-row {
  &:nth-child(even) {
    .datagrid-cell {
      background-color: $datagrid-alt-bg;
    }
  }
}

// Row Selected
//
.datagrid-striped .datagrid-body .datagrid-row[aria-selected="true"] {
  .datagrid-cell {
    background-color: $datagrid-active-bg;
    color: $datagrid-active-color;
  }
}

// Hover
//
.datagrid-hover > .datagrid-body .datagrid-row:hover,
.datagrid-hover > .datagrid-row:hover {
  .datagrid-cell {
    background-color: $datagrid-hover-bg;
  }
}
